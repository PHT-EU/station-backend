# configure station variables
id: "{{ config.id }}"
version: "{{ config.version }}"

# station runtime environment set to development to allow for debugging and reduced security settings
# if no value is given or any value other than 'development' is given it defaults to a production environment
environment: "{{ config.environment }}"

# configure the admin password for the station (username: admin)
admin_password: "{{ config.admin_password }}"

# set the station data directory where the station will store the data used for local analysis
data_dir: "{{ config.data_dir }}"

# Configure authentication for central services
central:
  api_url: "{{ config.central.api_url }}"
  robot_id: "{{ config.central.robot_id }}"
  robot_secret: "{{ config.central.robot_secret }}"
  private_key: {{ config.central.private_key }}
  private_key_password: "{{ config.central.private_key_password }}"

# Configure which port the proxy should use to listen for http requests
http:
  port: "{{ config.http.port }}"
{% if https %}
# Configure which port the proxy should use to listen for https requests
https:
  port: "{{ config.https.port }}"
  # Set the domain name for tls certificate either based on the existing certificate or to be used for self-signed certs
  domain: "{{ config.https.domain }}"
  # list of paths to certificate files (cert/key)
  certificate:
    cert: {{ config.https.certifcate.cert }}
    key: {{ config.https.certifcate.key }}
{% endif %}

# Optionally configure the port for the traefik dashboard, when dashboard is set to true
traefik:
  dashboard: "{{ config.traefik.dashboard }}"
  port: {{ config.traefik.dashboard_port }}

# Configures the address and credentials for the central container registry
registry:
  address: "{{ config.registry.address }}"
  user: "{{ config.registry.user }}"
  password: "{{ config.registry.password }}"
  project: "{{ config.registry.project }}"

# configure admin user for the postgres database
db:
  host: {{ config.db.host }}
  admin_user: "{{ config.db.admin_user }}"
  admin_password: "{{ config.db.admin_password }}"

api:
  # Fernet key for encryption of sensitive values stored in the database
  fernet_key: "{{ config.api.fernet_key }}"
  port: {{ config.api.port }}


# configure airflow connection
airflow:
  # set admin user and password for airflow
  admin_user: "{{ config.airflow.admin_user }}"
  admin_password: "{{ config.airflow.admin_password }}"
  {% if config.airflow.config_file %}
  # path to a custom airflow configuration file
  config_file: {{ config.airflow.config_file }}
  {% endif %}
  {% if config.airflow.custom_dags_dir %}
  # if you want to load your own DAGs from a different location set the path here, only the libraries installed in the
  # airflow_dags folder will be available to code inside the DAGs
  extra_dags_dir: "{{ config.airflow.custom_dags_dir }}"
  {% endif %}

# Configure the connection to the authentication server as well as the admin accounts
auth:
  robot_id: {{ config.auth.robot_id }}
  robot_secret: {{ config.auth.robot_secret }}

# Configure connection to redis cache
redis:
  host: {{ config.redis.host }}
  port: {{ config.redis.port }}


# configure minio connection
minio:
  host: "{{ config.minio.host }}"
  port: {{ config.minio.port }}
  admin_user: "{{ config.minio.admin_user }}"
  admin_password: "{{ config.minio.admin_password }}"


